!function(o,t){"use strict";const e={workerUrl:"https://unleashed-shopify-sync-v2.adrian-b0e.workers.dev/api/v2/data-fetch",mutationUrl:"https://unleashed-shopify-sync-v2.adrian-b0e.workers.dev/api/v2/mutate-locations",syncUrl:"https://unleashed-shopify-sync-v2.adrian-b0e.workers.dev/api/v2/sync-locations",buttonAttribute:"kilr-unleashed-sync",mutateButtonAttribute:"kilr-unleashed-mutate-locations",syncButtonAttribute:"kilr-unleashed-sync-locations",loadingClass:"kilr-sync-loading",successClass:"kilr-sync-success",errorClass:"kilr-sync-error"},n=t.createElement("style");function s(e,n){if(console.log("Showing notification:",e,n),o.shopify&&o.shopify.toast)return void o.shopify.toast.show(e);const s=t.createElement("div");s.style.cssText=`\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            padding: 16px 24px;\n            background: ${"error"===n?"#f44336":"success"===n?"#4CAF50":"#2196F3"};\n            color: white;\n            border-radius: 4px;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.2);\n            z-index: 10000;\n            animation: kilr-notification 0.3s ease-out;\n        `,s.textContent=e,t.body.appendChild(s),setTimeout(()=>{s.style.animation="kilr-notification-out 0.3s ease-in forwards",setTimeout(()=>s.remove(),300)},5e3)}function r(o,t){console.log("Updating button state:",t),o.classList.remove(e.loadingClass,e.successClass,e.errorClass);const n=o.getAttribute("data-original-text");switch(t){case"loading":n||o.setAttribute("data-original-text",o.textContent),o.classList.add(e.loadingClass),o.textContent="Processing...";break;case"success":o.classList.add(e.successClass),o.textContent="Complete",setTimeout(()=>{o.classList.remove(e.successClass),o.textContent=n},2e3);break;case"error":o.classList.add(e.errorClass),o.textContent="Failed",setTimeout(()=>{o.classList.remove(e.errorClass),o.textContent=n},2e3)}}function a(o){o.preventDefault();const t=o.currentTarget;if(console.log("Handle sync called for button:",t),t.classList.contains(e.loadingClass))return void console.log("Button is already in loading state, ignoring click");const n=window.location.hostname;console.log("Current domain:",n);const a={domain:n};console.log("Request data:",a),r(t,"loading"),fetch(e.workerUrl,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify(a)}).then(o=>(console.log("Response received:",o),o.json().then(t=>{if(!o.ok)throw new Error(t.error||"Sync failed");return t}))).then(o=>{if(console.log("Data received:",o),!o.success)throw new Error(o.error||"Sync failed");{const e=o.data,n={products:e.unleashed.products.length,customers:e.unleashed.customers.length,warehouses:e.unleashed.warehouses.length},a={products:e.shopify.products.length,customers:e.shopify.customers.length,locations:e.shopify.locations.length};s(`Successfully synced data. Unleashed: ${n.products} products, ${n.customers} customers, ${n.warehouses} warehouses. Shopify: ${a.products} products, ${a.customers} customers, ${a.locations} locations.`,"success"),r(t,"success"),o.mappingResults?m(o.mappingResults):m({customers:{toCreate:[],toUpdate:[],errors:[]},locations:{toCreate:[],toUpdate:[],errors:[]},products:{toCreate:[],toUpdate:[],toArchive:[],errors:[]}})}}).catch(o=>{console.error("Sync error:",o),s(o.message||"Failed to sync data","error"),r(t,"error")})}function c(o){o.preventDefault();const t=o.currentTarget;if(console.log("Handle location mutations called for button:",t),t.classList.contains(e.loadingClass))return void console.log("Button is already in loading state, ignoring click");const n=window.location.hostname;console.log("Current domain:",n);const a={domain:n};console.log("Mutation request data:",a),r(t,"loading"),t.textContent="Mutating Locations...",fetch(e.mutationUrl,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify(a)}).then(o=>(console.log("Mutation response received:",o),o.json().then(t=>{if(!o.ok)throw new Error(t.error||"Location mutation failed");return t}))).then(o=>{if(console.log("Mutation data received:",o),!o.success)throw new Error(o.error||"Location mutation failed");{const e=o.mutationResults.summary;s(`Location mutations completed! ${e.createdCount} created, ${e.updatedCount} updated. Total: ${e.totalSuccessful} successful, ${e.totalFailed} failed. Duration: ${e.duration}`,"success"),r(t,"success"),function(o){console.log("🎯 === LOCATION MUTATION RESULTS ==="),console.log("Mapping Summary:",o.mappingResults),console.log("Mutation Summary:",o.mutationResults.summary),o.mutationResults.created.successful>0&&console.log("✅ Successfully created locations:",o.mutationResults.created.successful);o.mutationResults.updated.successful>0&&console.log("🔄 Successfully updated locations:",o.mutationResults.updated.successful);(o.mutationResults.created.failed>0||o.mutationResults.updated.failed>0)&&console.log("❌ Failed operations:",{createdFailed:o.mutationResults.created.failed,updatedFailed:o.mutationResults.updated.failed});console.log("🎯 === END MUTATION RESULTS ===")}(o)}}).catch(o=>{console.error("Location mutation error:",o),s(o.message||"Failed to mutate locations","error"),r(t,"error")})}function l(o){o.preventDefault();const t=o.currentTarget;if(console.log("Handle location sync called for button:",t),t.classList.contains(e.loadingClass))return void console.log("Button is already in loading state, ignoring click");const n=window.location.hostname;console.log("Current domain:",n);const a={domain:n};console.log("Sync request data:",a),r(t,"loading"),t.textContent="Syncing Locations...",fetch(e.syncUrl,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify(a)}).then(o=>(console.log("Sync response received:",o),o.json().then(t=>{if(!o.ok)throw new Error(t.error||"Location sync failed");return t}))).then(o=>{if(console.log("Sync data received:",o),!o.success)throw new Error(o.error||"Location sync failed");{const e=o.mutationResults.summary,n=o.mappingResults;let a="Location sync completed! ";a+=`Mapped: ${n.toCreate} to create, ${n.toUpdate} to update. `,a+=`Executed: ${e.createdCount} created, ${e.updatedCount} updated. `,a+=`Duration: ${e.duration}`,s(a,"success"),r(t,"success"),function(o){console.log("🔄 === LOCATION SYNC RESULTS ==="),console.log("Workflow:",o.workflow),console.log("Mapping Summary:",o.mappingResults),console.log("Mutation Summary:",o.mutationResults.summary),o.mappingResults.details&&console.log("📊 Mapping Details:",o.mappingResults.details);o.mutationResults.summary.totalSuccessful>0&&(console.log("✅ Total successful operations:",o.mutationResults.summary.totalSuccessful),console.log(`   Created: ${o.mutationResults.summary.createdCount}`),console.log(`   Updated: ${o.mutationResults.summary.updatedCount}`));o.mutationResults.summary.totalFailed>0&&console.log("❌ Total failed operations:",o.mutationResults.summary.totalFailed);console.log("🔄 === END SYNC RESULTS ===")}(o)}}).catch(o=>{console.error("Location sync error:",o),s(o.message||"Failed to sync locations","error"),r(t,"error")})}function i(){console.log("Initializing unleashed sync buttons...");const o=t.querySelectorAll(`[${e.buttonAttribute}]`);console.log("Found sync buttons:",o.length),o.forEach(o=>{console.log("Setting up sync button:",o),o.removeEventListener("click",a),o.addEventListener("click",a)});const n=t.querySelectorAll(`[${e.mutateButtonAttribute}]`);console.log("Found mutation buttons:",n.length),n.forEach(o=>{console.log("Setting up mutation button:",o),o.removeEventListener("click",c),o.addEventListener("click",c)});const s=t.querySelectorAll(`[${e.syncButtonAttribute}]`);console.log("Found complete sync buttons:",s.length),s.forEach(o=>{console.log("Setting up complete sync button:",o),o.removeEventListener("click",l),o.addEventListener("click",l)})}function u(){"loading"===t.readyState?t.addEventListener("DOMContentLoaded",i):i();new MutationObserver(o=>{let t=!1;o.forEach(o=>{o.addedNodes.forEach(o=>{if(1===o.nodeType)if(o.matches&&(o.matches(`[${e.buttonAttribute}]`)||o.matches(`[${e.mutateButtonAttribute}]`)||o.matches(`[${e.syncButtonAttribute}]`)))t=!0;else if(o.querySelector){(o.querySelector(`[${e.buttonAttribute}]`)||o.querySelector(`[${e.mutateButtonAttribute}]`)||o.querySelector(`[${e.syncButtonAttribute}]`))&&(t=!0)}})}),t&&i()}).observe(t.body,{childList:!0,subtree:!0})}function d(o){return{action:o.id?"UPDATE":"CREATE",id:o.id||"NEW",email:o.email,name:`${o.firstName} ${o.lastName}`,phone:o.phone,unleashed_code:o.metafields.find(o=>"unleashed_customer_code"===o.key)?.value}}function p(o){return{action:o.id?"UPDATE":"CREATE",id:o.id||"NEW",name:o.name,address:`${o.address1}, ${o.city}, ${o.country}`,phone:o.phone}}function g(o){return{action:"ARCHIVED"===o.status?"ARCHIVE":o.id?"UPDATE":"CREATE",id:o.id||"NEW",handle:o.handle,title:o.title,variants:o.variants?.map(o=>({sku:o.sku,title:o.title,price:o.price}))||[],status:o.status}}function m(o){const t={customers:{toCreate:[],toUpdate:[],errors:[]},locations:{toCreate:[],toUpdate:[],errors:[]},products:{toCreate:[],toUpdate:[],toArchive:[],errors:[]},...o},e="color: #4CAF50; font-weight: bold",n="color: #2196F3; font-weight: bold",s="color: #F44336; font-weight: bold",r="color: #9C27B0; font-weight: bold";console.group("%cCustomer Mapping Results",r),t.customers.toCreate?.length&&(console.group("%cCustomers to Create:",e),t.customers.toCreate.forEach(o=>console.table([d(o)])),console.groupEnd()),t.customers.toUpdate?.length&&(console.group("%cCustomers to Update:",n),t.customers.toUpdate.forEach(o=>console.table([d(o)])),console.groupEnd()),t.customers.errors?.length&&(console.group("%cCustomer Errors:",s),console.table(t.customers.errors),console.groupEnd()),console.groupEnd(),console.group("%cLocation Mapping Results",r),t.locations.toCreate?.length&&(console.group("%cLocations to Create:",e),t.locations.toCreate.forEach(o=>console.table([p(o)])),console.groupEnd()),t.locations.toUpdate?.length&&(console.group("%cLocations to Update:",n),t.locations.toUpdate.forEach(o=>console.table([p(o)])),console.groupEnd()),t.locations.errors?.length&&(console.group("%cLocation Errors:",s),console.table(t.locations.errors),console.groupEnd()),console.groupEnd(),console.group("%cProduct Mapping Results",r),t.products.toCreate?.length&&(console.group("%cProducts to Create:",e),t.products.toCreate.forEach(o=>console.table([g(o)])),console.groupEnd()),t.products.toUpdate?.length&&(console.group("%cProducts to Update:",n),t.products.toUpdate.forEach(o=>console.table([g(o)])),console.groupEnd()),t.products.toArchive?.length&&(console.group("%cProducts to Archive:",s),t.products.toArchive.forEach(o=>console.table([g(o)])),console.groupEnd()),t.products.errors?.length&&(console.group("%cProduct Errors:",s),console.table(t.products.errors),console.groupEnd()),console.groupEnd()}n.textContent=`\n        .${e.loadingClass} {\n            opacity: 0.7;\n            cursor: not-allowed;\n            position: relative;\n        }\n        .${e.loadingClass}::after {\n            content: '';\n            position: absolute;\n            width: 16px;\n            height: 16px;\n            top: 50%;\n            right: 10px;\n            transform: translateY(-50%);\n            border: 2px solid #fff;\n            border-radius: 50%;\n            border-top-color: transparent;\n            animation: kilr-spin 1s linear infinite;\n        }\n        .${e.successClass} {\n            background-color: #4CAF50 !important;\n            border-color: #45a049 !important;\n        }\n        .${e.errorClass} {\n            background-color: #f44336 !important;\n            border-color: #da190b !important;\n        }\n        @keyframes kilr-spin {\n            to { transform: translateY(-50%) rotate(360deg); }\n        }\n        @keyframes kilr-notification {\n            from { opacity: 0; transform: translateX(100%); }\n            to { opacity: 1; transform: translateX(0); }\n        }\n        @keyframes kilr-notification-out {\n            from { opacity: 1; transform: translateX(0); }\n            to { opacity: 0; transform: translateX(100%); }\n        }\n    `,t.head.appendChild(n),"undefined"!=typeof window&&"undefined"!=typeof document?u():setTimeout(function o(){"undefined"!=typeof window&&"undefined"!=typeof document?u():setTimeout(o,50)},50),o.configureUnleashedSync=function(o){Object.assign(e,o)},window.logMappingResults=m}(window,document);